plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'maven-publish'
    id 'kotlin-android-extensions'
}

android {
    compileSdk rootProject.ext.compileSdkVersion

    defaultConfig {
        //applicationId "com.gang.library"
        minSdk rootProject.ext.android["minSdkVersion"]
        targetSdk rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        multiDexEnabled true

        ndk {
            abiFilters "armeabi", "armeabi-v7a", 'x86'
        }

        renderscriptTargetApi 25
        renderscriptSupportModeEnabled true    // Enable RS support
    }

    ndkVersion "22.1.7171670"

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
    }

    buildFeatures {
        dataBinding true
    }

    publishing {//这个不能少
        singleVariant("release")
    }
}

afterEvaluate {
    publishing {
        // 当前版本依赖库版本号，这个jitpack不会使用到，只是我们开发者自己查看
        // def versionName = "1.0"
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release // 表示发布 release（jitpack 都不会使用到）

                // You can then customize attributes of the publication as shown below.
                groupId = 'com.github.R-Gang' // 这个是依赖库的组 id
                artifactId = 'Android-Common' // 依赖库的名称（jitpack 都不会使用到）
                version = rootProject.ext.android["versionName"]
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.5.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'

    // Dex处理
    implementation 'androidx.multidex:multidex:2.0.1'

    //EventBus解耦
    implementation 'org.greenrobot:eventbus:3.2.0'

    //日志工具类 logger
    implementation 'com.orhanobut:logger:2.2.0'

    // 沉浸式状态栏
    implementation 'com.jaeger.statusbarutil:library:1.5.1'

    // x5 tbs
    implementation 'com.tencent.tbs:tbssdk:44085'

    // 实用工具类
    implementation rootProject.ext.dependencies["tools-utils"]

}

// 导出jar包
task makeJar(type: Copy) {
    //删除存在的
    delete 'build/libs/rgang-android-common.jar'
    //设置拷贝的文件
    from('build/intermediates/aar_main_jar/release/')
    //打进jar包后的文件目录
    into('build/libs/')
    //将classes.jar放入build/libs/目录下
    //include ,exclude参数来设置过滤
    //（我们只关心classes.jar这个文件）
    include('classes.jar')
    //重命名
    rename('classes.jar', 'rgang-android-common.jar')
}
makeJar.dependsOn(build)